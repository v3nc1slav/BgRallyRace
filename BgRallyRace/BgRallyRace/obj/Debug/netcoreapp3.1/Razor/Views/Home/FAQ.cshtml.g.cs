#pragma checksum "E:\BgRallyRace\BgRallyRace\BgRallyRace\Views\Home\FAQ.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "014c440e76b54e0bb3856a623548ca619996ca19"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_FAQ), @"mvc.1.0.view", @"/Views/Home/FAQ.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\BgRallyRace\BgRallyRace\BgRallyRace\Views\_ViewImports.cshtml"
using BgRallyRace;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\BgRallyRace\BgRallyRace\BgRallyRace\Views\_ViewImports.cshtml"
using BgRallyRace.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"014c440e76b54e0bb3856a623548ca619996ca19", @"/Views/Home/FAQ.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c6f0bfde6dc5ed3f9ea38a2b93338ba125de6571", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_FAQ : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "E:\BgRallyRace\BgRallyRace\BgRallyRace\Views\Home\FAQ.cshtml"
  
    ViewData["Title"] = "FAQ";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""form-group row"">
    <div class=""col-sm-3"">
        <div class=""tabs"">
            <button class=""tablinks"" onclick=""hoverTabs(event, 'London')"" id=""defaultOpen"">London</button>
            <button class=""tablinks"" onclick=""hoverTabs(event, 'Paris')"">Paris</button>
            <button class=""tablinks"" onclick=""hoverTabs(event, 'Tokyo')"">Tokyo</button>
            <button class=""tablinks"" onclick=""hoverTabs(event, 'Tokyo1')"">Tokyo1</button>
            <button class=""tablinks"" onclick=""hoverTabs(event, 'Tokyo2')"">Tokyo2</button>
            <button class=""tablinks"" onclick=""hoverTabs(event, 'Tokyo3')"">Tokyo3</button>
            <button class=""tablinks"" onclick=""hoverTabs(event, 'Tokyo4')"">Tokyo4</button>
        </div>
    </div>
    <div class=""col-sm-9"">
        <div id=""London"" class=""tabcontent"">
            <h3>London</h3>
            <p>London is the capital city of England.</p>
        </div>
        <div id=""Paris"" class=""tabcontent"">
            <h3>Paris</h3>
       ");
            WriteLiteral(@"     <p>Paris is the capital of France.</p>
        </div>
        <div id=""Tokyo"" class=""tabcontent"">
            <h3>Tokyo</h3>
            <p>Tokyo is the capital of Japan.</p>
        </div>
        <div id=""Tokyo1"" class=""tabcontent"">
            <h3>Tokyo1</h3>
            <p>111111111111111111</p>
        </div>
        <div id=""Tokyo2"" class=""tabcontent"">
            <h3>Tokyo2</h3>
            <p>222222222222222</p>
        </div>
        <div id=""Tokyo3"" class=""tabcontent"">
            <h3>Tokyo3</h3>
            <p>33333333333333333</p>
        </div>
        <div id=""Tokyo4"" class=""tabcontent"">
            <h3>Tokyo4</h3>
            <p>444444444444444444</p>
        </div>
    </div>
</div>

<script>
    function hoverTabs(evt, name) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName(""tabcontent"");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = ""none"";
        }
        tablinks =");
            WriteLiteral(@" document.getElementsByClassName(""tablinks"");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace("" active"", """");
        }
        document.getElementById(name).style.display = ""block"";
        evt.currentTarget.className += "" active"";
    }
    // Get the element with id=""defaultOpen"" and click on it
    document.getElementById(""defaultOpen"").click();
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
